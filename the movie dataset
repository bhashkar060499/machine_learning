import numpy as np 
import pandas as pd
import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
data=pd.read_csv('/kaggle/input/the-movies-dataset/ratings.csv')        
import matplotlib.pyplot as plt
import seaborn as sns
data.head()
plt.plot(data["rating"],data["timestamp"],"o")
plt.grid()
data.isnull().sum()
data.mean()
data.corr()
X=data[['timestamp']]
Y=data['rating']
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
Y = le.fit_transform(Y)
from sklearn.metrics import make_scorer, accuracy_score,precision_score
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score ,precision_score,recall_score,f1_score
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import KFold,train_test_split,cross_val_score
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=42)
gaussian = GaussianNB()
gaussian.fit(X_train, Y_train)
Y_pred = gaussian.predict(X_test) 
accuracy_nb=round(accuracy_score(Y_test,Y_pred)* 100, 2)
acc_gaussian = round(gaussian.score(X_train, Y_train) * 100, 2)

cm = confusion_matrix(Y_test, Y_pred)
accuracy = accuracy_score(Y_test,Y_pred)
precision =precision_score(Y_test, Y_pred,average='micro')
recall =  recall_score(Y_test, Y_pred,average='micro')
f1 = f1_score(Y_test,Y_pred,average='micro')
print('Confusion matrix for Naive Bayes\n',cm)
print('accuracy_Naive Bayes: %.3f' %accuracy)
print('precision_Naive Bayes: %.3f' %precision)
print('recall_Naive Bayes: %.3f' %recall)
print('f1-score_Naive Bayes : %.3f' %f1)
results = pd.DataFrame({
    'Model': [
              'Naive Bayes'
              ],
    'Score': [   
               acc_gaussian
            ],
    "Accuracy_score":[
                       accuracy_nb
                      ]})
result_df = results.sort_values(by='Accuracy_score', ascending=False)
result_df = result_df.reset_index(drop=True)
result_df.head(9)
